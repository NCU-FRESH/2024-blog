name: Manage Issues

on:
  issues:
    types: [opened]

jobs:
  manage_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue creator is an organization member
        id: check_membership
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const creator = context.payload.issue.user.login;
            const org = 'NCU-FRESH'; // Replace with your organization name as a string
            try {
              const { data: membership } = await github.rest.orgs.checkMembershipForUser({
                org: org,
                username: creator
              });
              console.log(`${creator} is a member of ${org}`);
              return 'true';
            } catch (error) {
              if (error.status === 404) {
                console.log(`${creator} is not a member of ${org}`);
                console.log(error);
                return 'false';
              }
              throw error;
            }

      - name: Close issue if not an organization member
        if: steps.check_membership.outputs.result == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Sorry, only organization members can create issues in this repository. This issue will be closed.'
            });
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });

      - name: Welcome organization member
        if: steps.check_membership.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Thank you for creating this issue. Our team will review it shortly.'
            });
