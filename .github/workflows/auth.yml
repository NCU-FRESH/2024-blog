name: Manage Issues

on:
  issues:
    types: [opened]

jobs:
  manage_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue creator is a team member
        id: check_membership
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const creator = context.payload.issue.user.login;
            const org = context.repo.owner;
            try {
              await github.rest.orgs.checkMembershipForUser({
                org: org,
                username: creator
              });
              console.log(`${creator} is a public member of ${org}`);
              core.setOutput('result', 'true');
            } catch (error) {
              if (error.status === 404) {
                try {
                  await github.rest.orgs.getMembershipForUser({
                    org: org,
                    username: creator
                  });
                  console.log(`${creator} is a private member of ${org}`);
                  core.setOutput('result', 'true');
                } catch (innerError) {
                  if (innerError.status === 404) {
                    console.log(`${creator} is not a member of ${org}`);
                    core.setOutput('result', 'false');
                  } else {
                    throw innerError;
                  }
                }
              } else {
                throw error;
              }
            }

      - name: Close issue if not a team member
        if: steps.check_membership.outputs.result == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Sorry, only team members can create issues in this repository. This issue will be closed.'
            });
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });

      - name: Welcome organization member
        if: steps.check_membership.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Thank you for creating this issue. Our team will review it shortly.'
            });
